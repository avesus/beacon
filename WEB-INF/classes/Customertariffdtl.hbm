<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
	"hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.bureaueye.beacon.model.standard">
	<class name="Customertariffdtl" table="customertariffdtl">
<meta attribute="sync-DAO">true</meta>	
		<id column="CUSTTARFDTL_ID" name="CusttarfdtlId" type="integer">
			<generator class="native"/>
		</id>
		<property column="systemlogprogram" length="50" name="Systemlogprogram" not-null="false" type="string"/>
		<property column="systemloguserid" length="10" name="Systemloguserid" not-null="false" type="string"/>
		<property column="systemlogaction" length="10" name="Systemlogaction" not-null="false" type="string"/>
		<property column="systemlogdate" length="10" name="Systemlogdate" not-null="false" type="date"/>
		<property column="lumpsum" length="11" name="Lumpsum" not-null="false" type="big_decimal"/>
		<property column="createuserid" length="10" name="Createuserid" not-null="false" type="string"/>
		<property column="xinactive" name="Xinactive" not-null="false" type="yes_no"/>
		<property column="CUSTTARFHDR_ID" length="10" name="CusttarfhdrId" not-null="false" type="string"/>
		<property column="rowid" length="11" name="Rowid" not-null="false" type="integer"/>
		<property column="systemlogtime" length="10" name="Systemlogtime" not-null="false" type="string"/>
		<property column="createdate" length="10" name="Createdate" not-null="false" type="date"/>
		<property column="createtime" length="30" name="Createtime" not-null="false" type="string"/>
		<property column="unitrate" length="11" name="Unitrate" not-null="false" type="big_decimal"/>
		<property column="fromvalue" length="11" name="Fromvalue" not-null="false" type="integer"/>
		<property column="tovalue" length="11" name="Tovalue" not-null="false" type="integer"/>
		<property column="XLOCK" length="20" name="Xlock" not-null="false" type="string"/>
	</class>
	<query name="findCustomertariffdtlsTotalResults">
		select count(*) from Customertariffdtl customertariffdtl where customertariffdtl.CusttarfhdrId = :custtarfhdrid
	</query>
	
	<query name="findCustomertariffdtlsByHdrId">from Customertariffdtl customertariffdtl where customertariffdtl.CusttarfhdrId = :custtarfhdrid order by FromValue, ToValue</query>
	
</hibernate-mapping>
