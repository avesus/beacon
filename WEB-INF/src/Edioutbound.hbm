<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD//EN"
	"hibernate-mapping-3.0.dtd" >

<hibernate-mapping package="com.bureaueye.beacon.model.edi">
	<class name="Edioutbound" table="edioutbound">	
<meta attribute="sync-DAO">true</meta>	
		<id
			column="EDIOUTBOUND_ID"
			name="EdioutboundId"
			type="integer"
		>
			<generator class="native" />
		</id>
		<property
			column="EDIBATCH_ID"
			name="EdibatchId"
			not-null="false"
			type="integer"
		 />		
		<property
			column="systemlogprogram"
			length="50"
			name="Systemlogprogram"
			not-null="false"
			type="string"
		 />
		<property
			column="systemloguserid"
			length="10"
			name="Systemloguserid"
			not-null="false"
			type="string"
		 />
		<property
			column="systemlogaction"
			length="10"
			name="Systemlogaction"
			not-null="false"
			type="string"
		 />
		<property
			column="systemlogdate"
			length="10"
			name="Systemlogdate"
			not-null="false"
			type="date"
		 />
		<property
			column="ediid"
			length="20"
			name="Ediid"
			not-null="false"
			type="string"
		 />
		<property
			column="fatime"
			length="8"
			name="Fatime"
			not-null="false"
			type="string"
		 />
		<property
			column="departmentkey"
			length="10"
			name="Departmentkey"
			not-null="false"
			type="string"
		 />
		<property
			column="dockey"
			length="100"
			name="Dockey"
			not-null="false"
			type="string"
		 />
		<property
			column="xinactive"
			name="Xinactive"
			not-null="false"
			type="yes_no"
		 />
		<property
			column="deletetime"
			length="8"
			name="Deletetime"
			not-null="false"
			type="string"
		 />
		<property
			column="doctype"
			length="10"
			name="Doctype"
			not-null="false"
			type="string"
		 />
		<property
			column="faid"
			length="20"
			name="Faid"
			not-null="false"
			type="string"
		 />
		<property
			column="companykey"
			length="10"
			name="Companykey"
			not-null="false"
			type="string"
		 />
		<property
			column="document"
			name="Document"
			not-null="false"
			type="string"
		 />
		<property
			column="systemlogtime"
			length="8"
			name="Systemlogtime"
			not-null="false"
			type="string"
		 />
		<property
			column="createdate"
			length="10"
			name="Createdate"
			not-null="false"
			type="date"
		 />
		<property
			column="controlid"
			length="20"
			name="Controlid"
			not-null="false"
			type="string"
		 />
		<property
			column="sentdate"
			length="10"
			name="Sentdate"
			not-null="false"
			type="date"
		 />
		<property
			column="testflag"
			name="Testflag"
			not-null="false"
			type="yes_no"
		 />
		<property
			column="createuserid"
			length="10"
			name="Createuserid"
			not-null="false"
			type="string"
		 />
		<property
			column="edistatus"
			length="20"
			name="Edistatus"
			not-null="false"
			type="string"
		 />
		<property
			column="senttime"
			length="8"
			name="Senttime"
			not-null="false"
			type="string"
		 />
		<property
			column="deleteflag"
			name="Deleteflag"
			not-null="false"
			type="yes_no"
		 />
		<property
			column="deletedate"
			length="10"
			name="Deletedate"
			not-null="false"
			type="date"
		 />
		<property
			column="errors"
			name="Errors"
			not-null="false"
			type="string"
		 />
		<property
			column="ackreqflag"
			name="Ackreqflag"
			not-null="false"
			type="yes_no"
		 />
		<property
			column="rowid"
			length="11"
			name="Rowid"
			not-null="false"
			type="integer"
		 />
		<property
			column="fadate"
			length="10"
			name="Fadate"
			not-null="false"
			type="date"
		 />
		<property
			column="activitykey"
			length="10"
			name="Activitykey"
			not-null="false"
			type="string"
		 />
		<property
			column="createtime"
			length="8"
			name="Createtime"
			not-null="false"
			type="string"
		 />
		<property
			column="xlock"
			length="20"
			name="Xlock"
			not-null="false"
			type="string"
		 />
		<property
			column="filename"
			length="100"
			name="Filename"
			not-null="false"
			type="string"
		 />		 
	</class>
	
	<query name="findEDIOutboundsTotalResults">
		<![CDATA[
			select count(*) from Edioutbound edioutbound where 
				edioutbound.Doctype like :id1 and 
				edioutbound.Ediid like :id2 and
				edioutbound.Createdate between :date1 and :date2 and		
				edioutbound.Edistatus like :id3				
		]]>
	</query>

	
</hibernate-mapping>
